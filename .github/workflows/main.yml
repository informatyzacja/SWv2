# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-vagrant:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Zatrzymaj vagranta i usuń poprzednią maszynę wirtualną jeżeli została
        run: |
          vagrant halt || true
          vagrant destroy -f --no-tty || true
          # usuń wszystkie maszyny
          VBoxManage list vms | grep -Eo '\{[-0-9a-f]*\}' | while read -r uuid; do VBoxManage unregistervm "$uuid" --delete; done || true

      # Runs a single command using the runners shell
      - name: Wywołaj vagrant up
        run: vagrant up

      - name: Sprawdź czy strona główna odpowiada
        run: curl -vL http://localhost:8080
        
      - name: Sprawdź czy strona logowania odpowiada
        run: curl -vL http://localhost:8080/admin
        
      - name: Zatrzymaj maszynę wirtualną
        run: vagrant halt
        
      - name: Pozbądź się maszyny wirtualnej
        run: vagrant destroy -f --no-tty
        
  deploy-master:
    runs-on: self-hosted
    
    # Deploy tylko jeżeli testy przejdą
    needs: [test-vagrant]
    
    # Jedynie na masterze
    if: github.ref == 'refs/heads/master'
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Zbuduj kontener
        run: podman build -t sw .
        
      - name: Prześlij kontener na VPS
        run: podman save sw | pv | ssh wybory.samorzad.pwr.edu.pl 'sudo podman load'

      - name: Stwórz nowy kontener
        run: |
          ssh wybory.samorzad.pwr.edu.pl '
            set -xe
            sudo podman create \
              --replace \
              -v /opt/sw/v:/opt/sw/v \
              -v /opt/sw/poll:/opt/sw/poll \
              -v /opt/sw/v-archive:/opt/sw/v-archive \
              -v /opt/sw/logs:/opt/sw/logs \
              --pull never \
              --restart unless-stopped \
              --name system-wyborczy \
              localhost/sw
            '
       
      - name: Zastąp usługę nowym kontenerem
        run: |
          ssh wybory.samorzad.pwr.edu.pl '
            set -xe
             
            sudo systemctl stop container-system-wyborczy
             
            cd /etc/systemd/system
            sudo podman generate systemd --name --files system-wyborczy
            sudo systemctl daemon-reload
            
            sudo systemctl start container-system-wyborczy
          '
